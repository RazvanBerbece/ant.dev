name: Deploy Webapp

on:
  push:
    branches: [ 'main' ]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'README.md'
      - '.gitignore'
      - 'infrastructure/**'
      - 'test/**'
      - 'docker-compose.yml'

  workflow_dispatch:

env:
  GO_VERSION: 1.22.4
  SERVICE_NAME: "antdev-webapp"
  REGION: europe-west2
  # Golang app env variables
  USE_LOCAL_STORAGE_COMMENTS: "1"
  ENV: "production"

jobs:

  continuous-deployment:
    environment: production
    runs-on: ubuntu-latest

    permissions:
        contents: 'read'
        id-token: 'write'

    steps:
      - uses: actions/checkout@v4.1.7

      - name: Generate next release number
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.DEV_BOT_TOKEN }}
          dry_run: true

      - name: Generate SHA output
        id: vars
        run: echo "GITHUB_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Generate Golang code from Templ files
        run: |
            go install github.com/a-h/templ/cmd/templ@latest
            go get github.com/a-h/templ
            ~/go/bin/templ generate

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          create_credentials_file: true
          workload_identity_provider: ${{ secrets.GCP_GITHUB_WIP }}
          service_account: ${{ secrets.GCP_GITHUB_SERVICE_ACCOUNT }}
          access_token_lifetime: '60s'

      - uses: 'docker/login-action@v3'
        name: 'Docker login'
        with:
          registry: '${{ env.REGION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: Build, tag and push container
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: "."
          push: true 
          tags: |
              ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GC_PROJECT_ID }}/${{ secrets.GC_DOCKER_ARTIFACT_REPO }}/${{ env.SERVICE_NAME }}:${{ steps.vars.outputs.GITHUB_SHA }}

      - name: Deploy updated image to Google Cloud Run
        id: 'deploy'
        run: |
            gcloud run deploy ${{ env.SERVICE_NAME }} \
              --image ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GC_PROJECT_ID }}/${{ secrets.GC_DOCKER_ARTIFACT_REPO }}/${{ env.SERVICE_NAME }}:${{ steps.vars.outputs.GITHUB_SHA }} \
              --region ${{ env.REGION }} \
              --port=8080 \
              --min-instances=0 \
              --max-instances=1 \
              --cpu=1 \
              --no-use-http2 \
              --no-allow-unauthenticated \
              --set-env-vars USE_LOCAL_STORAGE="${{ env.USE_LOCAL_STORAGE_COMMENTS }}",ENV="${{ env.ENV }}"
            
      # - name: Ping homepage
      #   run: 'curl "${{ steps.deploy.outputs.url }}"'

      - name: Create a new GitHub release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.DEV_BOT_TOKEN }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      
